line profiling: sample.interval=20000
"cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpPrim2" "h" "tryInline" "cmpCall" "cmp" "cmpIndices" "cmpSubsetDispatch" "h" "tryInline" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "forward_simulate" 
"cb$putlabel" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "forward_simulate" 
"sub" "packFrameName" "getInlineInfo" "tryInline" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "forward_simulate" 
"%in%" "constantFoldSym" "constantFold" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpSubsetDispatch" "h" "tryInline" "cmpCall" "cmp" "cmpBuiltinArgs" "h" "tryInline" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "forward_simulate" 
"cb$commitlocs" "codeBufCode" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "h" "tryInline" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "forward_simulate" 
"grep" "is.ddsym" "cmpSym" "cmp" "cmpDispatch" "h" "tryInline" "cmpCall" "cmp" "cmpDispatch" "h" "tryInline" "cmpCall" "cmp" "cmpDispatch" "h" "tryInline" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "h" "tryInline" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "forward_simulate" 
#File 1: /gpfs/commons/home/ieshghi/git/fastKar/R/forward.R
".allowPrimitiveMethods" ".findInheritedMethods" "selectMethod" ".nextMethod" "callNextMethod" "[[" "[[" "$" "$" 1#16 "forward_simulate" 
"paste" "paste" "gr2dt" 1#21 "forward_simulate" 
"as.list" "vapply" "vapply_1b" "[.data.table" 1#21 "[" 1#21 "forward_simulate" 
"is" "callNextMethod" "methods:::loadMethod" "methods:::loadMethod" "updateObject" "elementMetadata" "elementMetadata" "mcols" "mcols" "colnames" "standardGeneric" "%in%" ".valid.GenomicRanges.mcols" "method" "validityMethod" "isTRUE" "anyStrings" "validObject" "GRanges" "gUtils::si2gr" "parse.grl" "grl.unlist" "parse.gr" 1#24 "forward_simulate" 
"isNamespace" "asNamespace" "getNamespaceName" "cedta" "[.data.table" "[" "gUtils::seg2gr" "parse.grl" "grl.unlist" "parse.gr" 1#24 "forward_simulate" 
"updateObject" ".nextMethod" "callNextMethod" "updateObject" "updateObject" ".local" "ranges" "ranges" "standardGeneric" "start" "start" "standardGeneric" "start" "end" "standardGeneric" "end" "standardGeneric" "which" "get_out_of_bound_index" "valid.GenomicRanges.seqinfo" "method" "validityMethod" "isTRUE" "anyStrings" "validObject" "GRanges" "gUtils::seg2gr" "parse.grl" "grl.unlist" "parse.gr" 1#24 "forward_simulate" 
"sys.function" "callNextMethod" "updateObject" "updateObject" "names<-" "names<-" "METHOD" "names<-" "names<-" "grl.unlist" "parse.gr" 1#24 "forward_simulate" 
"elementMetadata" "elementMetadata" "FUN" "FUN" "lapply" "lapply" "combine_mcols" "DataFrame" "cbind" "eval" "eval" "eval" "standardGeneric" "<Anonymous>" "do.call" "do.call" ".local" "c" "c" "c" "coerce2" "coerce2" ".append_list_element" "setListElement" "setListElement" ".nextMethod" "eval" "eval" "callNextMethod" "[[<-" "[[<-" "$<-" "$<-" "grl.unlist" "parse.gr" 1#24 "forward_simulate" 
"match.call" "callNextMethod" "updateObject" "updateObject" ".local" "ranges" "ranges" "standardGeneric" "start" "start" "standardGeneric" "start" "end" "standardGeneric" "end" "standardGeneric" "which" "get_out_of_bound_index" "valid.GenomicRanges.seqinfo" "method" "validityMethod" "isTRUE" "anyStrings" "validObject" "updateObject" "$<-" "$<-" "grl.unlist" "parse.gr" 1#24 "forward_simulate" 
"DataFrame" "cbind" "eval" "eval" "eval" "standardGeneric" "BiocGenerics::cbind" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "grl.unlist" "parse.gr" 1#24 "forward_simulate" 
"rev.default" "rev" "validObject" "initialize" "initialize" "new" "new2" "new_DataFrame" "DataFrame" "GRanges" "gr.tile" 1#35 "values" "gr.merge" 1#35 "is" "gr2dt" 1#35 "forward_simulate" 
"is" "callNextMethod" "updateObject" "updateObject" ".local" "ranges" "ranges" "length" "length" "length" "gr.findoverlaps" "gr.merge" 1#35 "is" "gr2dt" 1#35 "forward_simulate" 
"seqlengths" "seqlengths" "GenomeInfoDb:::sequenceGeometryHasChanged" "seqinfo<-" "seqinfo<-" "seqlengths<-" "seqlengths<-" "gr.fix" "gr.findoverlaps" "gr.merge" 1#35 "is" "gr2dt" 1#35 "forward_simulate" 
"tryCatch" "try" "validObject" "initialize" "initialize" "new" "new2" "extractROWS" "extractROWS" "subset_along_ROWS" "[" "[" "findOverlaps_GNCList" ".local" "GenomicRanges::findOverlaps" "GenomicRanges::findOverlaps" "gr.findoverlaps" "gr.merge" 1#35 "is" "gr2dt" 1#35 "forward_simulate" 
"standardGeneric" "start" "end" "standardGeneric" "end" ".Call2" "IRanges:::find_overlaps_in_groups_NCList" "findOverlaps_GNCList" ".local" "GenomicRanges::findOverlaps" "GenomicRanges::findOverlaps" "gr.findoverlaps" "gr.merge" 1#35 "is" "gr2dt" 1#35 "forward_simulate" 
"validObject" "initialize" "initialize" "new" "new2" "new_GRanges" "GRanges" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "dt2gr" "gr.findoverlaps" "gr.merge" 1#35 "is" "gr2dt" 1#35 "forward_simulate" 
".sigLabel" ".findMethodInTable" "selectMethod" ".nextMethod" "callNextMethod" "[[" "[[" "FUN" "lapply" "lapply" ".local" "as.data.frame" "as.data.frame" "gr.findoverlaps" "gr.merge" 1#35 "is" "gr2dt" 1#35 "forward_simulate" 
"paste" ".fillSignatures" ".findInheritedMethods" "selectMethod" ".nextMethod" "callNextMethod" "[[" "[[" "FUN" "lapply" "lapply" ".local" "as.data.frame" "as.data.frame" "gr.findoverlaps" "gr.merge" 1#35 "is" "gr2dt" 1#35 "forward_simulate" 
"is" "callNextMethod" "updateObject" "updateObject" "updateObject" "updateObject" "update" "standardGeneric" "update" "seqinfo<-" "seqinfo<-" "seqlevels<-" "seqlevels<-" "gr.fix" "gr.findoverlaps" "gr.merge" 1#35 "is" "gr2dt" 1#35 "forward_simulate" 
"list" "do.call" "extractROWS" "extractROWS" ".local" "sort" "sort" "gr.findoverlaps" "gr.merge" 1#35 "is" "gr2dt" 1#35 "forward_simulate" 
#File 2: <text>
"is" "callNextMethod" "methods:::loadMethod" "methods:::loadMethod" "updateObject" ".local" "ranges" "ranges" "standardGeneric" "start" "start" "standardGeneric" "start" "end" "standardGeneric" "end" "data.frame" 2#1 "eval" "eval" "data.table::as.data.table" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "gr2dt" 1#35 "forward_simulate" 
"lockBinding" "[.data.table" 1#39 "[" 1#39 "forward_simulate" 
"FUN" "vapply" "vapply_1c" "%chin%" "which" "[.data.table" 1#77 "[" 1#77 "FUN" "lapply" "mclapply" 1#66 "forward_simulate" 
"home" "setDT" "as.data.table.list" "data.table" 1#67 "FUN" "lapply" "mclapply" 1#66 "forward_simulate" 
"duplicated.default" "duplicated" "setdiff" "merge.data.table" 1#68 "FUN" "lapply" "mclapply" 1#66 "forward_simulate" 
"[.data.table" "[" "merge.data.table" 1#73 "FUN" "lapply" "mclapply" 1#66 "forward_simulate" 
".prepareFastSubset" "[.data.table" 1#74 "[" 1#74 "FUN" "lapply" "mclapply" 1#66 "forward_simulate" 
"[.data.table" 1#77 "[" 1#77 "FUN" "lapply" "mclapply" 1#66 "forward_simulate" 
"setattr" "setDT" "as.data.table.list" "data.table" 1#67 "FUN" "lapply" "mclapply" 1#66 "forward_simulate" 
"c" "bmerge" "[.data.table" "[" "merge.data.table" 1#68 "FUN" "lapply" "mclapply" 1#66 "forward_simulate" 
"mayCallBrowserList" "mayCallBrowser" "mayCallBrowserList" "mayCallBrowser" "mayCallBrowserList" "mayCallBrowser" "mayCallBrowserList" "mayCallBrowser" "mayCallBrowserList" "mayCallBrowser" "mayCallBrowserList" "mayCallBrowser" "mayCallBrowserList" "mayCallBrowser" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" 1#81 "simulate_walks_dt" 1#81 "forward_simulate" 
"cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "h" "tryInline" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" 1#81 "simulate_walks_dt" 1#81 "forward_simulate" 
"exists" "findHomeNS" "nsName" "getInlineInfo" "isBaseVar" "getFoldFun" "constantFoldCall" "constantFold" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "h" "tryInline" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" 1#81 "simulate_walks_dt" 1#81 "forward_simulate" 
"constantFold" "cmp" "cmpIndices" "cmpSubsetDispatch" "h" "tryInline" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "h" "tryInline" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" 1#81 "simulate_walks_dt" 1#81 "forward_simulate" 
"findCenvVar" "findVar" "cmpSym" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpBuiltinArgs" "cmpDispatch" "h" "tryInline" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallExprFun" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "h" "tryInline" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" 1#81 "simulate_walks_dt" 1#81 "forward_simulate" 
"cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpBuiltinArgs" "cmpDispatch" "h" "tryInline" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" 1#81 "simulate_walks_dt" 1#81 "forward_simulate" 
"exists" "findCenvVar" "findVar" "cmpSym" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpBuiltinArgs" "cmpDispatch" "h" "tryInline" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "h" "tryInline" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" 1#81 "simulate_walks_dt" 1#81 "forward_simulate" 
"is.na" "sparseMatrix" 1#104 "FUN" "lapply" "mclapply" 1#98 "simulate_walks_dt" 1#81 "forward_simulate" 
".identC" "extends" "non0ind" ".Arith.Csparse" "+" "+" "+" 1#447 "symmetrize" ".External2" "%>%" 1#110 "FUN" "lapply" "mclapply" 1#98 "simulate_walks_dt" 1#81 "forward_simulate" 
"match.arg" "order" "make.names" "<Anonymous>" "do.call" "as.data.frame.list" "as.data.frame" "as.data.frame" ".Call" "make_template_dat_cpp" "as.data.table" 1#147 "simulate_hic_dt" 1#106 "FUN" "lapply" "mclapply" 1#98 "simulate_walks_dt" 1#81 "forward_simulate" 
"non0ind" ".Arith.Csparse" "+" "+" "+" 1#447 "symmetrize" ".External2" "%>%" 1#110 "FUN" "lapply" "mclapply" 1#98 "simulate_walks_dt" 1#81 "forward_simulate" 
".getClassesFromCache" "getClassDef" "validObject" "sparseMatrix" 1#104 "FUN" "lapply" "mclapply" 1#98 "simulate_walks_dt" 1#81 "forward_simulate" 
".nextMethod" "callNextMethod" "initialize" "initialize" "new" "newTMat" ".M2C" ".Arith.Csparse" "+" "+" "+" 1#447 "symmetrize" ".External2" "%>%" 1#110 "FUN" "lapply" "mclapply" 1#98 "simulate_walks_dt" 1#81 "forward_simulate" 
"[.data.table" 1#153 "[" 1#153 "simulate_hic_dt" 1#106 "FUN" "lapply" "mclapply" 1#98 "simulate_walks_dt" 1#81 "forward_simulate" 
"validityMethod" "isTRUE" "anyStrings" "validObject" ".nextMethod" "callNextMethod" "initialize" "initialize" "new" "newTMat" ".M2C" ".Arith.Csparse" "+" "+" "+" 1#447 "symmetrize" ".External2" "%>%" 1#110 "FUN" "lapply" "mclapply" 1#98 "simulate_walks_dt" 1#81 "forward_simulate" 
"validObject" "sparseMatrix" 1#104 "FUN" "lapply" "mclapply" 1#98 "simulate_walks_dt" 1#81 "forward_simulate" 
".Arith.Csparse" "+" "+" "+" 1#447 "symmetrize" ".External2" "%>%" 1#110 "FUN" "lapply" "mclapply" 1#98 "simulate_walks_dt" 1#81 "forward_simulate" 
"getOption" "setalloccol" "as.data.table.data.frame" "as.data.table" 1#147 "simulate_hic_dt" 1#106 "FUN" "lapply" "mclapply" 1#98 "simulate_walks_dt" 1#81 "forward_simulate" 
1#447 "symmetrize" ".External2" "%>%" 1#110 "FUN" "lapply" "mclapply" 1#98 "simulate_walks_dt" 1#81 "forward_simulate" 
"[.data.table" 1#153 "[" 1#153 "simulate_hic_dt" 1#106 "FUN" "lapply" "mclapply" 1#98 "simulate_walks_dt" 1#81 "forward_simulate" 
"forderv" ".prepareFastSubset" "[.data.table" 1#159 "[" 1#159 "simulate_hic_dt" 1#106 "FUN" "lapply" "mclapply" 1#98 "simulate_walks_dt" 1#81 "forward_simulate" 
".M2C" "sparseMatrix" 1#447 "symmetrize" ".External2" "%>%" 1#110 "FUN" "lapply" "mclapply" 1#98 "simulate_walks_dt" 1#81 "forward_simulate" 
"%*%" "%*%" "%*%" 1#112 "FUN" "lapply" "mclapply" 1#98 "simulate_walks_dt" 1#81 "forward_simulate" 
"copy" 1#117 "FUN" "lapply" "mclapply" 1#98 "simulate_walks_dt" 1#81 "forward_simulate" 
"any" ".deparseOpts" "deparse" "paste" "deparse1" "force" "as.data.frame.numeric" "as.data.frame" "<Anonymous>" "do.call" "as.data.frame.list" "as.data.frame" "as.data.frame" ".Call" "make_template_dat_cpp" "as.data.table" 1#147 "simulate_hic_dt" 1#106 "FUN" "lapply" "mclapply" 1#98 "simulate_walks_dt" 1#81 "forward_simulate" 
"[.data.table" 1#160 "[" 1#160 "simulate_hic_dt" 1#106 "FUN" "lapply" "mclapply" 1#98 "simulate_walks_dt" 1#81 "forward_simulate" 
"Matrix::diag<-" "standardGeneric" "Matrix::diag<-" 1#448 "symmetrize" ".External2" "%>%" 1#110 "FUN" "lapply" "mclapply" 1#98 "simulate_walks_dt" 1#81 "forward_simulate" 
"[.data.table" 1#102 "[" 1#102 "FUN" "lapply" "mclapply" 1#98 "simulate_walks_dt" 1#81 "forward_simulate" 
"copy" "[.data.table" 1#168 "[" 1#168 "simulate_hic_dt" 1#106 "FUN" "lapply" "mclapply" 1#98 "simulate_walks_dt" 1#81 "forward_simulate" 
"[.data.table" 1#104 "[" 1#104 "sparseMatrix" 1#104 "FUN" "lapply" "mclapply" 1#98 "simulate_walks_dt" 1#81 "forward_simulate" 
"validObject" "sparseMatrix" 1#447 "symmetrize" ".External2" "%>%" 1#110 "FUN" "lapply" "mclapply" 1#98 "simulate_walks_dt" 1#81 "forward_simulate" 
"as.list.default" "as.list" "mayCallBrowserList" "mayCallBrowser" "mayCallBrowserList" "mayCallBrowser" "mayCallBrowserList" "mayCallBrowser" "mayCallBrowserList" "mayCallBrowser" "mayCallBrowserList" "mayCallBrowser" "mayCallBrowserList" "mayCallBrowser" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" 1#125 "inter_allele_dt" 1#125 "simulate_walks_dt" 1#81 "forward_simulate" 
"exists" "findCenvVar" "getInlineInfo" "tryInline" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" 1#125 "inter_allele_dt" 1#125 "simulate_walks_dt" 1#81 "forward_simulate" 
"lapply" "findLocalsList1" "findLocalsList" "funEnv" "make.functionContext" "h" "tryInline" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" 1#125 "inter_allele_dt" 1#125 "simulate_walks_dt" 1#81 "forward_simulate" 
"$" "findCenvVar" "getInlineInfo" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "h" "tryInline" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" 1#125 "inter_allele_dt" 1#125 "simulate_walks_dt" 1#81 "forward_simulate" 
"tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpPrim2" "h" "tryInline" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpBuiltinArgs" "cmpDispatch" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" 1#125 "inter_allele_dt" 1#125 "simulate_walks_dt" 1#81 "forward_simulate" 
"cb$putlabel" "cmpDispatch" "h" "tryInline" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" 1#125 "inter_allele_dt" 1#125 "simulate_walks_dt" 1#81 "forward_simulate" 
"[.data.table" 1#341 "[" 1#341 "FUN" "lapply" 1#336 "do.call" 1#336 "t" 1#336 "inter_allele_dt" 1#125 "simulate_walks_dt" 1#81 "forward_simulate" 
"length" "isFALSE" "mapply" "Map" "regmatches" "unlist" ".parse_on" "[.data.table" "[" "merge.data.table" 1#342 "FUN" "lapply" 1#336 "do.call" 1#336 "t" 1#336 "inter_allele_dt" 1#125 "simulate_walks_dt" 1#81 "forward_simulate" 
"==" "force" "[.data.table" 1#342 "[" 1#342 "FUN" "lapply" 1#336 "do.call" 1#336 "t" 1#336 "inter_allele_dt" 1#125 "simulate_walks_dt" 1#81 "forward_simulate" 
"vapply_1b" "[.data.table" 1#339 "[" 1#339 "FUN" "lapply" 1#336 "do.call" 1#336 "t" 1#336 "inter_allele_dt" 1#125 "simulate_walks_dt" 1#81 "forward_simulate" 
"stopifnot" "setnames" "setattr" "[.data.table" 1#340 "[" 1#340 "unique" 1#340 "FUN" "lapply" 1#336 "do.call" 1#336 "t" 1#336 "inter_allele_dt" 1#125 "simulate_walks_dt" 1#81 "forward_simulate" 
".Call" "[.data.table" 1#344 "[" 1#344 "inter_allele_dt" 1#125 "simulate_walks_dt" 1#81 "forward_simulate" 
".Call" "[.data.table" 1#344 "[" 1#344 "inter_allele_dt" 1#125 "simulate_walks_dt" 1#81 "forward_simulate" 
"sum" ".Call" "[.data.table" 1#344 "[" 1#344 "inter_allele_dt" 1#125 "simulate_walks_dt" 1#81 "forward_simulate" 
".Call" "[.data.table" 1#344 "[" 1#344 "inter_allele_dt" 1#125 "simulate_walks_dt" 1#81 "forward_simulate" 
"*" ".Call" "[.data.table" 1#344 "[" 1#344 "inter_allele_dt" 1#125 "simulate_walks_dt" 1#81 "forward_simulate" 
".Call" "[.data.table" 1#344 "[" 1#344 "inter_allele_dt" 1#125 "simulate_walks_dt" 1#81 "forward_simulate" 
".Call" "[.data.table" 1#344 "[" 1#344 "inter_allele_dt" 1#125 "simulate_walks_dt" 1#81 "forward_simulate" 
"sum" ".Call" "[.data.table" 1#344 "[" 1#344 "inter_allele_dt" 1#125 "simulate_walks_dt" 1#81 "forward_simulate" 
".Call" "[.data.table" 1#344 "[" 1#344 "inter_allele_dt" 1#125 "simulate_walks_dt" 1#81 "forward_simulate" 
".Call" "[.data.table" 1#344 "[" 1#344 "inter_allele_dt" 1#125 "simulate_walks_dt" 1#81 "forward_simulate" 
".Call" "[.data.table" 1#344 "[" 1#344 "inter_allele_dt" 1#125 "simulate_walks_dt" 1#81 "forward_simulate" 
"forderv" "[.data.table" 1#394 "[" 1#394 "sum_matrices" 1#346 "inter_allele_dt" 1#125 "simulate_walks_dt" 1#81 "forward_simulate" 
"lapply" "[.data.table" 1#394 "[" 1#394 "sum_matrices" 1#346 "inter_allele_dt" 1#125 "simulate_walks_dt" 1#81 "forward_simulate" 
"forderv" "unique.data.table" "unique" 1#395 "sum_matrices" 1#346 "inter_allele_dt" 1#125 "simulate_walks_dt" 1#81 "forward_simulate" 
"forderv" "unique.data.table" "unique" 1#395 "sum_matrices" 1#346 "inter_allele_dt" 1#125 "simulate_walks_dt" 1#81 "forward_simulate" 
"forderv" "unique.data.table" "unique" 1#395 "sum_matrices" 1#346 "inter_allele_dt" 1#125 "simulate_walks_dt" 1#81 "forward_simulate" 
"forderv" "unique.data.table" "unique" 1#395 "sum_matrices" 1#346 "inter_allele_dt" 1#125 "simulate_walks_dt" 1#81 "forward_simulate" 
"forderv" "unique.data.table" "unique" 1#395 "sum_matrices" 1#346 "inter_allele_dt" 1#125 "simulate_walks_dt" 1#81 "forward_simulate" 
"forderv" "unique.data.table" "unique" 1#395 "sum_matrices" 1#346 "inter_allele_dt" 1#125 "simulate_walks_dt" 1#81 "forward_simulate" 
"forderv" "unique.data.table" "unique" 1#395 "sum_matrices" 1#346 "inter_allele_dt" 1#125 "simulate_walks_dt" 1#81 "forward_simulate" 
"bmerge" "[.data.table" "[" "merge.data.table" 1#347 "inter_allele_dt" 1#125 "simulate_walks_dt" 1#81 "forward_simulate" 
